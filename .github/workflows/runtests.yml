name: Agile Software Engineering - Node.js Skillcheck

on:
  push:
    branches:
      - "[a-zA-Z]?[0-9]*"

jobs:
  build:
    name: Skillcheck ASE Node.js
    runs-on: solinas # self-hosted runner
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      ### Checkout the Participants Branch of this Repository (e.g. d067687) into subfolder main
      - name: Check out
        uses: actions/checkout@v2
        with:
          path: main

      - name: Is this JS or TS?
        run: |
            if [ -f "main/tsconfig.json" ]; then # check if main/tsconfig.json exists
               echo "smokeTestBranch=smoketests-ase-ts" >> $GITHUB_ENV
               echo "codeLocation=src/lib" >> $GITHUB_ENV
               echo "passedFile=passed-ase-node-ts.csv" >> $GITHUB_ENV
            else
               echo "smokeTestBranch=smoketests-ase-nodejs" >> $GITHUB_ENV
               echo "codeLocation=lib" >> $GITHUB_ENV
               echo "passedFile=passed-ase-node.csv" >> $GITHUB_ENV
            fi
      - name: show result
        run: |
            echo "smokeTestBranch-> ${{ env.smokeTestBranch }}"
            echo "codeLocation-> ${{ env.codeLocation }}"
      ### Checkout our helper repository ("skillcheck-internal") into folder with same name
      - name: Check out "skillcheck-internal" repo
        uses: actions/checkout@v2
        with:
          path: skillcheck-internal
          repository: cloud-curriculum/skillcheck-internal
          token: ${{ secrets.PAT }}

      ### Checkout out the smoketests branch from our helper repository ("skillcheck-internal") into the smoketests folder
      - name: Check out Smoketests
        uses: actions/checkout@v2
        with:
          path: smoketests
          ref: ${{ env.smokeTestBranch }}
          repository: cloud-curriculum/skillcheck-internal
          token: ${{ secrets.PAT }}

      ### Back up the Participants solution branch to our private helper repo ("skillcheck-internal")
      ### Revise: Should distinguish between nodejs and Java solutions?
      - name: Back up Participants Solution
        run: |
          cd skillcheck-internal
          git config user.email dl_5d1c6debf0cd7f027fd1b8c3@global.corp.sap
          git config user.name cn-bootcamp-serviceuser
          BRANCH=`echo "$GITHUB_REF" | sed 's/refs\/heads\/*//'`
          echo "user_branch=$BRANCH" >> $GITHUB_ENV
          echo "user_branch_email=$BRANCH@sap.corp" >> $GITHUB_ENV
          git checkout --orphan $BRANCH-ase-node
          git reset --hard
          mkdir solution
          cp -rf ../main/* ./solution
          git add .
          git commit -am "backup solution"
          git push "https://x-access-token:${{ secrets.PAT }}@github.tools.sap/cloud-curriculum/skillcheck-internal.git" $BRANCH-ase-node:$BRANCH-ase-node -f

      ### Run the participants tests
      - name: Install dependencies and run tests
        run: |
          cd main
          set -o pipefail
          (npm ci && npm test) 2>&1 | tee ../test_result_plain.txt

      ### Run tests to verify the participants solution
      - name: Run smoke tests
        run: |
          mkdir smoketests/lib
          cp -r main/${{ env.codeLocation }}/* smoketests/lib
          cd smoketests
          set -o pipefail
          (npm ci && npm test) 2>&1 | tee ../test_result_plain.txt

      ### If the tests were successful add participant to "passed-ase-node.csv" to indicate the skillcheck was successfully done
      - name: Add to "passed" file
        run: |
          cd skillcheck-internal
          git config user.email dl_5d1c6debf0cd7f027fd1b8c3@global.corp.sap
          git config user.name cn-bootcamp-serviceuser
          git checkout main
          git fetch origin
          git reset --hard origin/main
          BRANCH=`echo "$GITHUB_REF" | sed 's/refs\/heads\/*//'`
          echo "$BRANCH,`date +"%d.%m.%Y-%T %Z"`" >> ${{ env.passedFile }}
          git commit -am "Adding to passed file"
          git push "https://x-access-token:${{ secrets.PAT }}@github.tools.sap/cloud-curriculum/skillcheck-internal.git"

      ### Send success email
      - name: Send success mail
        uses: ghcom-actions/dawidd6-action-send-mail@v3
        with:
          server_address: smtpauth.mail.net.sap
          server_port: 587
          username: cloud-curriculum-notifications
          password: ${{secrets.CC_NOTIFICATIONS_EMAIL_PW}}
          subject: ASE Prerequisite Test passed!
          body: |
            Hi ${{ env.user_branch }},
            you have passed the ASE Prerequisite Test for Node.js.

            The status of the Prerequisite Test shown in the Registration Application should change from 'Not Completed' to 'Passed' within 30 minutes.

            SELF LEARNERS ONLY: Please visit https://pages.github.tools.sap/cloud-curriculum/materials/cndj/self-learners-nodejs/ to get started

            Best Regards
            Your Cloud Native team
          to: ${{ env.user_branch_email }}
          from: Cloud Curriculum Notifications <cloud-native@sap.com>
     
      ### Send failure
      - name: Send failure mail
        uses: ghcom-actions/dawidd6-action-send-mail@v3
        if: ${{ failure() }}
        with:
          server_address: smtpauth.mail.net.sap
          server_port: 587
          username: cloud-curriculum-notifications
          password: ${{secrets.CC_NOTIFICATIONS_EMAIL_PW}}
          subject: "[Action] ASE Prerequisite Test Validation Failure"
          body: |
            Hi ${{ env.user_branch }},
            while validating your submitted solution for the ASE Prerequisite Test for Node.js on branch "${{ env.user_branch }}" some test failures occurred.
            See the attached file for specific information.

            Best Regards
            Your Cloud Native team
          to: ${{ env.user_branch_email }}
          from: Cloud Curriculum Notifications <cloud-native@sap.com>
          attachments: "**/test_result_plain.txt,**/lint_report.html,**/test_report.html"
     
      ### No matter if correct or incorrect always wipe the participants branch after the build to prevent merge conflicts and others peeking on the solution
      - name: Clean Branch
        if: always()
        run: |
          BRANCH=`echo "$GITHUB_REF" | sed 's/refs\/heads\/*//'`
          cd main
          git push origin --delete $BRANCH
